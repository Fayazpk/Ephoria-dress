<%# app/views/usermodule/orders/_pending_payment.html.erb %>
<div class="bg-white rounded-lg shadow-md p-4 mb-4">
  <h3 class="text-lg font-semibold mb-3">Complete Payment</h3>
  
  <%= form_with(url: razorpay_callback_usermodule_checkout_path(@selected_order), method: :post, local: true, id: 'payment-form', class: "space-y-4") do |f| %>
    <div class="space-y-3">
      <!-- Wallet -->
      <% if current_user.wallet.present? %>
        <div class="border rounded-md p-3">
          <label class="flex items-center space-x-3 cursor-pointer">
            <%= f.radio_button :payment_method, 'wallet', class: "form-radio", 
                data: { insufficient_balance: current_user.wallet.balance < @selected_order.total_price } %>
            <div class="flex items-center space-x-2">
              <svg class="h-5 w-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"/>
              </svg>
              <span>Wallet (Balance: <%= number_to_currency(current_user.wallet.balance) %>)</span>
            </div>
          </label>
        </div>
      <% end %>

      <!-- COD -->
      <div class="border rounded-md p-3">
        <label class="flex items-center space-x-3 cursor-pointer">
          <%= f.radio_button :payment_method, 'cod', class: "form-radio" %>
          <div class="flex items-center space-x-2">
            <svg class="h-5 w-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z"/>
            </svg>
            <span>Cash on Delivery</span>
          </div>
        </label>
      </div>

      <!-- Razorpay -->
      <div class="border rounded-md p-3">
        <label class="flex items-center space-x-3 cursor-pointer">
          <%= f.radio_button :payment_method, 'razorpay', class: "form-radio" %>
          <div class="flex items-center space-x-2">
            <svg class="h-5 w-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"/>
            </svg>
            <span>Pay Online (Razorpay)</span>
          </div>
        </label>
      </div>
    </div>

    <div class="mt-4 pt-3 border-t">
      <p class="font-medium mb-2">Order Total: <%= number_to_currency(@selected_order.total_price) %></p>
      <%= f.submit "Pay Now", class: "w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded transition", id: "pay-now-btn" %>
    </div>
  <% end %>
</div>

<%= javascript_tag do %>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('payment-form');
    const payButton = document.getElementById('pay-now-btn');

    // Handle wallet balance check
    document.querySelectorAll('input[name="payment_method"]').forEach(radio => {
      radio.addEventListener('change', function() {
        if (this.value === 'wallet' && this.dataset.insufficientBalance === 'true') {
          this.checked = false;
          if (confirm('Insufficient wallet balance. Add money to wallet?')) {
            window.location.href = '<%= usermodule_wallet_path %>';
          }
        }
      });
    });

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const paymentMethod = document.querySelector('input[name="payment_method"]:checked');
      
      if (!paymentMethod) {
        alert('Please select a payment method');
        return;
      }

      payButton.disabled = true;

      try {
        if (paymentMethod.value === 'razorpay') {
          await handleRazorpayPayment();
        } else {
          form.submit();
        }
      } catch (error) {
        console.error('Payment failed:', error);
        alert('Payment failed. Please try again.');
        payButton.disabled = false;
      }
    });

    async function handleRazorpayPayment() {
      const response = await fetch('<%= usermodule_checkouts_path %>', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': '<%= form_authenticity_token %>'
        },
        body: JSON.stringify({
          checkout_id: '<%= @selected_order.id %>',
          payment_method: 'razorpay'
        })
      });

      const data = await response.json();
      const options = {
        key: '<%= ENV['RAZORPAY_KEY_ID'] %>', // Change from credentials to ENV
        amount: data.amount,
        currency: data.currency,
        order_id: data.razorpay_order_id,
        name: '<%= Rails.application.config.site_name rescue "Your Store" %>',
        handler: handlePaymentSuccess,
        prefill: {
          name: '<%= current_user.name %>',
          email: '<%= current_user.email %>'
        }
      };

      const rzp = new Razorpay(options);
      rzp.open();
    }

    function handlePaymentSuccess(response) {
      const formData = new FormData();
      formData.append('razorpay_payment_id', response.razorpay_payment_id);
      formData.append('razorpay_order_id', response.razorpay_order_id);
      formData.append('razorpay_signature', response.razorpay_signature);

      fetch('<%= razorpay_callback_usermodule_checkout_path(@selected_order) %>', {
        method: 'POST',
        headers: {
          'X-CSRF-Token': '<%= form_authenticity_token %>'
        },
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          window.location.href = data.redirect_url;
        } else {
          throw new Error(data.error);
        }
      })
      .catch(error => {
        console.error('Payment verification failed:', error);
        alert('Payment verification failed. Please contact support.');
        payButton.disabled = false;
      });
    }
  });
<% end %>